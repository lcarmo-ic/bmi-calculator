{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const CATEGORIES = {\n  UNDERWEIGHT: \"underweight\",\n  HEALTHY: \"healthy\",\n  OVERWEIGHT: \"overweight\",\n  OBESE: \"obese\",\n  UNSET: \"unset\"\n};\nconst initialState = {\n  height: '',\n  weight: '',\n  bmi: 0,\n  isHeightError: false,\n  isWeightError: false\n};\nexport const bmiSlice = createSlice({\n  name: 'bmi',\n  initialState,\n  reducers: {\n    setHeight: (state, action) => {\n      state.height = action.payload;\n    },\n    setWeight: (state, action) => {\n      state.weight = action.payload;\n    },\n    setBmi: (state, action) => {\n      state.bmi = action.payload;\n    },\n    toggleIsHeightError: state => {\n      state.isHeightError = !state.isHeightError;\n    },\n    toggleIsWeightError: state => {\n      state.isWeightError = !state.isWeightError;\n    }\n  }\n});\nexport const {\n  setHeight,\n  setWeight,\n  setBmi,\n  toggleIsHeightError,\n  toggleIsWeightError\n} = bmiSlice.actions;\nexport const selectHeight = state => state.bmi.height;\nexport const selectWeight = state => state.bmi.weight;\nexport const selectBmi = state => state.bmi.bmi;\nexport const selectIsHeightError = state => state.bmi.isHeightError;\nexport const selectIsWeightError = state => state.bmi.isWeightError;\nexport const selectBmiCategory = state => {\n  const bmi = state.bmi.bmi;\n\n  switch (true) {\n    case bmi === 0:\n      return CATEGORIES.UNSET;\n\n    case bmi < 18.5:\n      return CATEGORIES.UNDERWEIGHT;\n\n    case bmi < 25:\n      return CATEGORIES.HEALTHY;\n\n    case bmi < 30:\n      return CATEGORIES.OVERWEIGHT;\n\n    case bmi >= 30:\n      return CATEGORIES.OBESE;\n\n    default:\n      return CATEGORIES.UNSET;\n  }\n};\nexport default bmiSlice.reducer;","map":{"version":3,"names":["createSlice","CATEGORIES","UNDERWEIGHT","HEALTHY","OVERWEIGHT","OBESE","UNSET","initialState","height","weight","bmi","isHeightError","isWeightError","bmiSlice","name","reducers","setHeight","state","action","payload","setWeight","setBmi","toggleIsHeightError","toggleIsWeightError","actions","selectHeight","selectWeight","selectBmi","selectIsHeightError","selectIsWeightError","selectBmiCategory","reducer"],"sources":["/Users/lcarmo/Documents/React/bmi-calculator/src/bmiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const CATEGORIES = {\n    UNDERWEIGHT: \"underweight\",\n    HEALTHY: \"healthy\",\n    OVERWEIGHT: \"overweight\",\n    OBESE: \"obese\",\n    UNSET: \"unset\"\n}\n\nconst initialState = {\n    height: '',\n    weight: '',\n    bmi: 0,\n    isHeightError: false,\n    isWeightError: false\n};\n\nexport const bmiSlice = createSlice({\n    name: 'bmi',\n    initialState,\n    reducers: {\n        setHeight: (state, action) => {\n            state.height = action.payload;\n        },\n        setWeight: (state, action) => {\n            state.weight = action.payload;\n        },\n        setBmi: (state, action) => {\n            state.bmi = action.payload;\n        },\n        toggleIsHeightError: state => {\n            state.isHeightError = !state.isHeightError\n        },\n        toggleIsWeightError: state => {\n            state.isWeightError = !state.isWeightError\n        }\n    }\n});\n\nexport const { \n    setHeight,\n    setWeight,\n    setBmi,\n    toggleIsHeightError,\n    toggleIsWeightError\n} = bmiSlice.actions\n\n\nexport const selectHeight = state => state.bmi.height\n\nexport const selectWeight = state => state.bmi.weight\n\nexport const selectBmi = state => state.bmi.bmi\n\nexport const selectIsHeightError = state => state.bmi.isHeightError;\n\nexport const selectIsWeightError = state => state.bmi.isWeightError;\n\nexport const selectBmiCategory = state => {\n    const bmi = state.bmi.bmi;\n\n    switch(true){\n        case (bmi === 0):\n            return CATEGORIES.UNSET\n        case (bmi < 18.5):\n            return CATEGORIES.UNDERWEIGHT;\n        case (bmi < 25):\n            return CATEGORIES.HEALTHY;\n        case (bmi < 30):\n            return CATEGORIES.OVERWEIGHT;\n        case (bmi >= 30):\n            return CATEGORIES.OBESE;\n        default:\n            return CATEGORIES.UNSET;\n\n    }\n}\n\nexport default bmiSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG;EACtBC,WAAW,EAAE,aADS;EAEtBC,OAAO,EAAE,SAFa;EAGtBC,UAAU,EAAE,YAHU;EAItBC,KAAK,EAAE,OAJe;EAKtBC,KAAK,EAAE;AALe,CAAnB;AAQP,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EADS;EAEjBC,MAAM,EAAE,EAFS;EAGjBC,GAAG,EAAE,CAHY;EAIjBC,aAAa,EAAE,KAJE;EAKjBC,aAAa,EAAE;AALE,CAArB;AAQA,OAAO,MAAMC,QAAQ,GAAGb,WAAW,CAAC;EAChCc,IAAI,EAAE,KAD0B;EAEhCP,YAFgC;EAGhCQ,QAAQ,EAAE;IACNC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAtB;IACH,CAHK;IAINC,SAAS,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACC,OAAtB;IACH,CANK;IAONE,MAAM,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACvBD,KAAK,CAACP,GAAN,GAAYQ,MAAM,CAACC,OAAnB;IACH,CATK;IAUNG,mBAAmB,EAAEL,KAAK,IAAI;MAC1BA,KAAK,CAACN,aAAN,GAAsB,CAACM,KAAK,CAACN,aAA7B;IACH,CAZK;IAaNY,mBAAmB,EAAEN,KAAK,IAAI;MAC1BA,KAAK,CAACL,aAAN,GAAsB,CAACK,KAAK,CAACL,aAA7B;IACH;EAfK;AAHsB,CAAD,CAA5B;AAsBP,OAAO,MAAM;EACTI,SADS;EAETI,SAFS;EAGTC,MAHS;EAITC,mBAJS;EAKTC;AALS,IAMTV,QAAQ,CAACW,OANN;AASP,OAAO,MAAMC,YAAY,GAAGR,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUF,MAAxC;AAEP,OAAO,MAAMkB,YAAY,GAAGT,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUD,MAAxC;AAEP,OAAO,MAAMkB,SAAS,GAAGV,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUA,GAArC;AAEP,OAAO,MAAMkB,mBAAmB,GAAGX,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUC,aAA/C;AAEP,OAAO,MAAMkB,mBAAmB,GAAGZ,KAAK,IAAIA,KAAK,CAACP,GAAN,CAAUE,aAA/C;AAEP,OAAO,MAAMkB,iBAAiB,GAAGb,KAAK,IAAI;EACtC,MAAMP,GAAG,GAAGO,KAAK,CAACP,GAAN,CAAUA,GAAtB;;EAEA,QAAO,IAAP;IACI,KAAMA,GAAG,KAAK,CAAd;MACI,OAAOT,UAAU,CAACK,KAAlB;;IACJ,KAAMI,GAAG,GAAG,IAAZ;MACI,OAAOT,UAAU,CAACC,WAAlB;;IACJ,KAAMQ,GAAG,GAAG,EAAZ;MACI,OAAOT,UAAU,CAACE,OAAlB;;IACJ,KAAMO,GAAG,GAAG,EAAZ;MACI,OAAOT,UAAU,CAACG,UAAlB;;IACJ,KAAMM,GAAG,IAAI,EAAb;MACI,OAAOT,UAAU,CAACI,KAAlB;;IACJ;MACI,OAAOJ,UAAU,CAACK,KAAlB;EAZR;AAeH,CAlBM;AAoBP,eAAeO,QAAQ,CAACkB,OAAxB"},"metadata":{},"sourceType":"module"}