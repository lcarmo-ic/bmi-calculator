{"ast":null,"code":"var _jsxFileName = \"/Users/lcarmo/Documents/React/bmi-calculator/src/components/bmi-form/bmi-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, React } from \"react\";\nimport \"./bmi-form.styles.jsx\";\nimport { CustomInput, FormContainer } from \"./bmi-form.styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setHeight, setWeight, selectHeight, selectWeight, toggleIsHeightError, toggleIsWeightError, selectIsHeightError, selectIsWeightError, selectBmiCategory } from '../../bmiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BMIForm = () => {\n  _s();\n\n  const height = useSelector(selectHeight);\n  const weight = useSelector(selectWeight);\n  const isHeightError = useSelector(selectIsHeightError);\n  const isWeightError = useSelector(selectIsWeightError);\n  const category = useSelector(selectBmiCategory);\n  const dispatch = useDispatch();\n\n  const onHeightChange = event => {\n    const newHeight = event.target.value;\n    dispatch(setHeight(newHeight));\n\n    if (newHeight && (newHeight <= 0 || newHeight >= 3) && !isHeightError) {\n      dispatch(toggleIsHeightError());\n    } else if (newHeight && newHeight > 0 && newHeight < 3 && isHeightError) {\n      dispatch(toggleIsHeightError());\n    } else if (!newHeight && isHeightError) {\n      dispatch(toggleIsHeightError());\n    }\n  };\n\n  const onWeightChange = event => {\n    const newWeight = event.target.value;\n    dispatch(setWeight(newWeight));\n\n    if (newWeight && (newWeight <= 0 || newWeight >= 700)) {\n      dispatch(toggleIsWeightError());\n    } else if (newWeight && newWeight > 0 && newWeight < 700 && isWeightError) {\n      dispatch(toggleIsWeightError());\n    } else if (!newWeight && isWeightError) {\n      dispatch(toggleIsWeightError());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        autoComplete: \"off\",\n        type: \"number\",\n        required: true,\n        step: \"0.01\",\n        min: \"0.10\",\n        max: \"3\",\n        maxlength: \"4\",\n        placeholder: \"height (m)\",\n        value: height,\n        category: category,\n        onChange: onHeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        autoComplete: \"off\",\n        type: \"number\",\n        required: true,\n        step: \"0.01\",\n        min: \"2\",\n        max: \"700\",\n        maxlength: \"6\",\n        placeholder: \"weight (kg)\",\n        value: weight,\n        category: category,\n        onChange: onWeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BMIForm, \"R6DbpibQLQgP5zjv11xA3wFtmKI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = BMIForm;\nexport default BMIForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BMIForm\");","map":{"version":3,"names":["Fragment","React","CustomInput","FormContainer","useDispatch","useSelector","setHeight","setWeight","selectHeight","selectWeight","toggleIsHeightError","toggleIsWeightError","selectIsHeightError","selectIsWeightError","selectBmiCategory","BMIForm","height","weight","isHeightError","isWeightError","category","dispatch","onHeightChange","event","newHeight","target","value","onWeightChange","newWeight"],"sources":["/Users/lcarmo/Documents/React/bmi-calculator/src/components/bmi-form/bmi-form.component.jsx"],"sourcesContent":["import { Fragment, React } from \"react\";\nimport \"./bmi-form.styles.jsx\"\nimport {CustomInput, FormContainer } from \"./bmi-form.styles\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setHeight, setWeight, selectHeight, selectWeight, toggleIsHeightError, toggleIsWeightError, selectIsHeightError, selectIsWeightError, selectBmiCategory } from '../../bmiSlice'\n\nconst BMIForm = () => {\n    const height = useSelector(selectHeight)\n    const weight = useSelector(selectWeight)\n    const isHeightError = useSelector(selectIsHeightError)\n    const isWeightError = useSelector(selectIsWeightError)\n    const category = useSelector(selectBmiCategory)\n    const dispatch = useDispatch();\n    \n    const onHeightChange = (event) => {\n        const newHeight = event.target.value\n        dispatch(setHeight(newHeight));\n\n        if(newHeight && (newHeight <= 0 || newHeight >= 3) && !isHeightError){\n            dispatch(toggleIsHeightError())\n        }else if(newHeight && newHeight > 0 && newHeight < 3 && isHeightError) {\n            dispatch(toggleIsHeightError())\n        } else if (!newHeight && isHeightError){\n            dispatch(toggleIsHeightError())\n        }\n    }\n\n    const onWeightChange = (event) => {\n        const newWeight = event.target.value;\n        dispatch(setWeight(newWeight));\n\n        if(newWeight && (newWeight <= 0 || newWeight >= 700)){\n            dispatch(toggleIsWeightError())\n        }else if(newWeight && newWeight > 0 && newWeight < 700 && isWeightError) {\n            dispatch(toggleIsWeightError())\n        } else if (!newWeight && isWeightError){\n            dispatch(toggleIsWeightError())\n        }\n    }\n\n    return (\n    <Fragment>\n        <FormContainer>\n            <CustomInput \n                autoComplete=\"off\" \n                type=\"number\" \n                required \n                step=\"0.01\" \n                min=\"0.10\" \n                max=\"3\" \n                maxlength=\"4\"\n                placeholder='height (m)' \n                value={height}\n                category={category}\n                onChange={onHeightChange}>\n            </CustomInput>\n            <CustomInput \n                autoComplete=\"off\" \n                type=\"number\" \n                required \n                step=\"0.01\" \n                min=\"2\" \n                max=\"700\"\n                maxlength=\"6\"\n                placeholder='weight (kg)' \n                value={weight} \n                category={category}\n                onChange={onWeightChange}>\n            </CustomInput>\n        </FormContainer>\n    </Fragment>\n    )\n}\n\nexport default BMIForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}